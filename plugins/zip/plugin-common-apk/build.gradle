buildscript {
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            mavenCentral()
        }
    }

    dependencies {
        classpath 'com.tencent.shadow.core:runtime'
        classpath 'com.tencent.shadow.core:activity-container'
        classpath 'com.tencent.shadow.core:gradle-plugin'
        classpath "org.javassist:javassist:$javassist_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.tencent.shadow.plugin'



android {
    compileSdkVersion project.COMPILE_SDK_VERSION

    defaultConfig {
        applicationId 'com.nolovr.shadow.core.plugin.apk.common'
        minSdkVersion project.MIN_SDK_VERSION
        targetSdkVersion project.TARGET_SDK_VERSION
        versionCode project.VERSION_CODE
        versionName project.VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }

    // 将插件applicationId设置为和宿主相同
    productFlavors {
        plugin {
            applicationId project.DEV_HOST_APP_APPLICATION_ID
        }
    }

    // 将插件的资源ID分区改为和宿主0x7F不同的值
    aaptOptions {
        additionalParameters "--package-id", "0x7E", "--allow-reserved-package-id"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':plugin-common-lib')
    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    pluginCompileOnly 'com.tencent.shadow.core:runtime'
}


//shadow {
//    packagePlugin {
//        pluginTypes {
//            debug {
//                loaderApkConfig = new Tuple2('sample-loader-debug.apk', ':sample-loader:assembleDebug')
//                runtimeApkConfig = new Tuple2('sample-runtime-debug.apk', ':sample-runtime:assembleDebug')
//                pluginApks {
//                    pluginApk1 {
//                        businessName = 'sample-common'//businessName相同的插件，context获取的Dir是相同的。businessName留空，表示和宿主相同业务，直接使用宿主的Dir。
//                        partKey = 'sample-common'
//                        buildTask = 'assembleDebug'
//                        apkName = 'plugin-shadow-common-apk-debug.apk'
//                        apkPath = 'plugin-shadow-common-apk/build/outputs/apk/debug/plugin-shadow-common-apk-debug.apk'
//                    }
//                }
//            }
//
//            release {
//                loaderApkConfig = new Tuple2('sample-loader-release.apk', ':sample-loader:assembleRelease')
//                runtimeApkConfig = new Tuple2('sample-runtime-release.apk', ':sample-runtime:assembleRelease')
//                pluginApks {
//                    pluginApk1 {
//                        businessName = 'sample-common'
//                        partKey = 'sample-common'
//                        buildTask = 'assembleRelease'
//                        apkName = 'plugin-shadow-common-apk-release.apk'
//                        apkPath = 'plugin-shadow-common-apk/build/outputs/apk/release/plugin-shadow-common-apk-release.apk'
//                    }
//                }
//            }
//        }
//
//        uuid = '1234567890'
//        loaderApkProjectPath = 'sample-loader'
//        runtimeApkProjectPath = 'sample-runtime'
//
//        archivePrefix = 'pluginCommon'
//
//        version = 4
//        compactVersion = [1, 2, 3]
//        uuidNickName = "1.1.5"
//    }
//}