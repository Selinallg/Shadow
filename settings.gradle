import java.nio.file.Files

rootProject.name = 'shadow'

copyLocalPropertiesForIncludeBuilds()
includeBuild 'shadow/coding'
includeBuild 'shadow/core'
includeBuild 'shadow/dynamic'

includeSample()

def includeSample() {
    include 'sample-constant',
            'sample-host',
            'sample-host-lib',
            'sample-manager',
            'sample-loader',
            'sample-runtime',
            'pinnedheaderexpandablelistview',
            'slidingmenu',
            'sample-base-lib',
            'sample-base',
            'sample-app'
    project(':sample-constant').projectDir = file('projects/sample/source/sample-host/sample-constant')
    project(':sample-host').projectDir = file('projects/sample/source/sample-host/sample-host')
    project(':sample-host-lib').projectDir = file('projects/sample/source/sample-host/sample-host-lib')
    project(':sample-manager').projectDir = file('projects/sample/source/sample-host/sample-manager')

    project(':sample-loader').projectDir = file('projects/sample/source/sample-plugin/sample-loader')
    project(':sample-runtime').projectDir = file('projects/sample/source/sample-plugin/sample-runtime')
    project(':pinnedheaderexpandablelistview').projectDir = file('projects/sample/source/sample-plugin/third-party/pinnedheaderexpandablelistview')
    project(':slidingmenu').projectDir = file('projects/sample/source/sample-plugin/third-party/slidingmenu')
    project(':sample-base-lib').projectDir = file('projects/sample/source/sample-plugin/sample-base-lib')
    project(':sample-base').projectDir = file('projects/sample/source/sample-plugin/sample-base')
    project(':sample-app').projectDir = file('projects/sample/source/sample-plugin/sample-app')
}

includeDev()

def includeDev() {
    include 'dev-constant',
            'dev-host',
            'dev-host-lib',
            'dev-manager'
//            'sample-loader',
//            'sample-runtime',
//            'pinnedheaderexpandablelistview',
//            'slidingmenu',
//            'sample-base-lib',
//            'sample-base',
//            'sample-app'
    project(':dev-constant').projectDir = file('host/dev-constant')
    project(':dev-host').projectDir = file('host/dev-host')
    project(':dev-host-lib').projectDir = file('host/dev-host-lib')
    project(':dev-manager').projectDir = file('host/dev-manager')

//    project(':sample-loader').projectDir = file('projects/sample/source/sample-plugin/sample-loader')
//    project(':sample-runtime').projectDir = file('projects/sample/source/sample-plugin/sample-runtime')
//    project(':pinnedheaderexpandablelistview').projectDir = file('projects/sample/source/sample-plugin/third-party/pinnedheaderexpandablelistview')
//    project(':slidingmenu').projectDir = file('projects/sample/source/sample-plugin/third-party/slidingmenu')
//    project(':sample-base-lib').projectDir = file('projects/sample/source/sample-plugin/sample-base-lib')
//    project(':sample-base').projectDir = file('projects/sample/source/sample-plugin/sample-base')
//    project(':sample-app').projectDir = file('projects/sample/source/sample-plugin/sample-app')
}


/**
 * Android Studio当前不会为IncludeBuild创建包含sdk.dir的local.properties
 * 使得没有ANDROID_HOME或等效环境变量时仅依赖根目录的local.properties无法编译IncludeBuild。
 * 为了使此含有IncludeBuild的项目和其他不含有IncludeBuild的普通Android工程一样可以在
 * 只有根目录的local.properties情况下正常编译，用此任务复制local.properties。
 */
def copyLocalPropertiesForIncludeBuilds() {
    def rootFile = file('local.properties')
    if (rootFile.exists()) {
        ['coding', 'core', 'dynamic'].forEach {
            def includeBuildFile = file("shadow/${it}/local.properties")
            if (!includeBuildFile.exists()) {
                Files.copy(rootFile.toPath(), includeBuildFile.toPath())
            }
        }
    }
}
