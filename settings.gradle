import java.nio.file.Files

rootProject.name = 'shadow'


/**
 * Android Studio当前不会为IncludeBuild创建包含sdk.dir的local.properties
 * 使得没有ANDROID_HOME或等效环境变量时仅依赖根目录的local.properties无法编译IncludeBuild。
 * 为了使此含有IncludeBuild的项目和其他不含有IncludeBuild的普通Android工程一样可以在
 * 只有根目录的local.properties情况下正常编译，用此任务复制local.properties。
 */
def copyLocalPropertiesForIncludeBuilds() {
    def rootFile = file('local.properties')
    if (rootFile.exists()) {
        ['coding', 'core', 'dynamic'].forEach {
            def includeBuildFile = file("shadow/${it}/local.properties")
            if (!includeBuildFile.exists()) {
                Files.copy(rootFile.toPath(), includeBuildFile.toPath())
            }
        }
    }
}

copyLocalPropertiesForIncludeBuilds()
includeBuild 'shadow/coding'
includeBuild 'shadow/core'
includeBuild 'shadow/dynamic'


includeDevHost()
def includeDevHost() {
    include ':host:depend:dev-constant',
            ':host:depend:dev-interface',
            ':host:depend:dev-host-lib',
            ':host:depend:dev-download',
            ':host:dev-host',
            'dev-manager'


    project(':host:depend:dev-constant').projectDir = file('host/depend/dev-constant')
    project(':host:depend:dev-interface').projectDir = file('host/depend/dev-interface')
    project(':host:depend:dev-host-lib').projectDir = file('host/depend/dev-host-lib')
    project(':host:dev-host').projectDir = file('host/dev-host')
    project(':dev-manager').projectDir = file('host/dev-manager')

}

// loader runtime
include 'dev-loader'
project(':dev-loader').projectDir = file('plugins/dev-loader')
include 'dev-runtime'
project(':dev-runtime').projectDir = file('plugins/dev-runtime')


// zip
includeDev()
def includeDev() {
    include ':plugins:plugin-base-lib',
            ':plugins:plugin-base-apk',
            ':plugins:plugin-demo-apk',
            ':plugins:plugin-common-lib',// 插件通用库
            ':plugins:zips:zip-plugin-common-apk',// 插件通用库插件包
            ':plugins:zips:zip-plugin-app-apk'


    project(':plugins:plugin-base-lib').projectDir = file('plugins/zip/plugin-base-lib')
    project(':plugins:plugin-base-apk').projectDir = file('plugins/zip/plugin-base-apk')
    project(':plugins:zips:zip-plugin-app-apk').projectDir = file('plugins/zip/zip-plugin-app-apk')
    project(':plugins:plugin-demo-apk').projectDir = file('plugins/zip/plugin-demo-apk')

    project(':plugins:plugin-common-lib').projectDir = file('plugins/zip-common/plugin-common-lib')
    project(':plugins:zips:zip-plugin-common-apk').projectDir = file('plugins/zip-common/zip-plugin-common-apk')
}



// zip2
//include ':plugins:zip2:plugin-other'
//includeBuild ':plugins:zip2:plugin-other'
include ':plugins:zips:zip-plugin-other-apk'
project(':plugins:zips:zip-plugin-other-apk').projectDir = file('plugins/zip2/zip-plugin-other-apk')
include ':plugins:plugin-other-lib'
project(':plugins:plugin-other-lib').projectDir = file('plugins/zip2/plugin-other-lib')
include ':plugins:plugin-ContentProvider-apk'
project(':plugins:plugin-ContentProvider-apk').projectDir = file('plugins/zip2/plugin-ContentProvider-apk')
include ':plugins:plugin-ContentObserver-apk'
project(':plugins:plugin-ContentObserver-apk').projectDir = file('plugins/zip2/plugin-ContentObserver-apk')
include ':plugins:plugin-service-apk'
project(':plugins:plugin-service-apk').projectDir = file('plugins/zip/plugin-service-apk')


// zip3
include ':plugins:zips:zip-plugin-A4ijkplayer-apk'
project(':plugins:zips:zip-plugin-A4ijkplayer-apk').projectDir = file('plugins/zip3/zip-plugin-A4ijkplayer-apk')
include ':plugins:plugin-A4ijkplayer-lib'
project(':plugins:plugin-A4ijkplayer-lib').projectDir = file('plugins/zip3/plugin-A4ijkplayer-lib')
include ':plugins:plugin-p2host-apk'
project(':plugins:plugin-p2host-apk').projectDir = file('plugins/zip3/plugin-p2host-apk')
include ':plugins:plugin-p2host-lib'
project(':plugins:plugin-p2host-lib').projectDir = file('plugins/zip3/plugin-p2host-lib')



//third-party
include ':warehouse:third-party:slidingmenu'
include ':warehouse:third-party:pinnedheaderexpandablelistview'

//common
// 下载模块，主要为了适配m3u8的下载
include ':common:download:Aria:Aria'
include ':common:download:Aria:AriaAnnotations'
include ':common:download:Aria:AriaCompiler'
include ':common:download:Aria:PublicComponent'
include ':common:download:Aria:FtpComponent'
include ':common:download:Aria:SFtpComponent'
include ':common:download:Aria:HttpComponent'
include ':common:download:Aria:M3U8Component'

include ':common:download:Aria:simple:Simple2'
